{"name":"C2TCP","tagline":"C2TCP: A Flexible Cellular TCP to Meet Stringent Delay Requirements","body":"# C2TCP v2.0\r\n\r\nC2TCP v2.0: A Flexible Cellular TCP to Meet Stringent Delay Requirements {https://doi.org/10.1109/JSAC.2019.2898758 , https://arxiv.org/abs/1810.13241 }.\r\n\r\n(The source code of the earlier version of C2TCP {https://doi.org/10.23919/IFIPNetworking.2018.8696844 , https://arxiv.org/abs/1807.02689 } published in IFIP Networking Confernece, May 2018, can be accessed on <https://github.com/Soheil-ab/C2TCP-IFIP>)\r\n\r\nInstallation Guide\r\n==================\r\n\r\nHere we will provide you with detailed instructions to test C2TCP over Mahimahi.\r\n\r\n### Getting the Source Code:\r\n\r\nNote: C2TCP is implemented on Linux kernel 4.13.1. \r\n\r\nGet the source code:\r\n\r\n\tcd ~\r\n    git clone https://github.com/Soheil-ab/c2tcp.git\r\n\tcd c2tcp\r\n\r\n### Installing Required Tools\r\n\r\nGeneral Note: Installing any of the following tools/schemes, depending on your machine, might require other libraries (in addition to what have been mentioned here). So, if you get any errors mentioning that something not being found when you try to `make`, install them using `apt`.\r\n\r\n1. Install Mahimahi (http://mahimahi.mit.edu/#getting)\r\n\r\n\t```sh  \r\n\tcd ~/c2tcp/\r\n\tsudo apt-get install build-essential git debhelper autotools-dev dh-autoreconf iptables protobuf-compiler libprotobuf-dev pkg-config libssl-dev dnsmasq-base ssl-cert libxcb-present-dev libcairo2-dev libpango1.0-dev iproute2 apache2-dev apache2-bin iptables dnsmasq-base gnuplot iproute2 apache2-api-20120211 libwww-perl\r\n\tgit clone https://github.com/ravinet/mahimahi \r\n\tcd mahimahi\r\n\t./autogen.sh && ./configure && make\r\n\tsudo make install\r\n\tsudo sysctl -w net.ipv4.ip_forward=1\r\n\t```\r\n\r\n2. Install iperf3\r\n\r\n\t```sh\r\n    sudo apt-get remove iperf3 libiperf0\r\n    wget https://iperf.fr/download/ubuntu/libiperf0_3.1.3-1_amd64.deb\r\n    wget https://iperf.fr/download/ubuntu/iperf3_3.1.3-1_amd64.deb\r\n    sudo dpkg -i libiperf0_3.1.3-1_amd64.deb iperf3_3.1.3-1_amd64.deb\r\n    rm libiperf0_3.1.3-1_amd64.deb iperf3_3.1.3-1_amd64.deb\r\n\t```\r\n\r\n### Installing Other Schemes \r\n\r\nBBR, C2TCP, Westwood, and Cubic are already part of the patch. To install Sprout and Verus follow the following instructions: \r\n\r\n1. Build Sprout (http://alfalfa.mit.edu/)\r\n\r\n\t```sh  \r\n\tsudo apt-get install libboost-math-dev libboost-math1.54.0 libprotobuf8 libprotobuf-dev \r\n\tcd ~/c2tcp/alfalfa\r\n\t./autogen.sh\r\n\t./configure --enable-examples && make\t\r\n\t```\r\n\r\n2. Build Verus (https://github.com/yzaki/verus)\r\n\r\n\tRequired packages: libtbb libasio libalglib libboost-system\r\n\r\n\t```sh\r\n\tsudo apt-get install build-essential autoconf libtbb-dev libasio-dev libalglib-dev libboost-system-dev\r\n\tcd ~/c2tcp/verus\r\n\tautoreconf -i\r\n\t./configure && make\r\n\t```\r\n\r\n### Patching C2TCP Kernel: Install the prepared debian packages.\r\n\r\nSimply install the debian packages of the patched kernel:\r\n\r\n    cd ~/c2tcp/linux-patch\r\n    sudo dpkg -i linux-image*\r\n    sudo dpkg -i linux-header*\r\n    sudo reboot \r\n \r\n### Verify the new kernel\r\n\r\n\tuname -r\r\n\r\nYou should see something like 4.13.1-c2tcp.v2.01. If not follow the instructions on https://github.com/Soheil-ab/C2TCP-IFIP and bring the 4.13.1-c2tcp.v2.01 image on top of the grub list. For instance, you can use grub-customizer application.\r\n\t\r\nCheck whether C2TCP is there:\r\n\t\r\n\r\n\tsysctl net.ipv4.tcp_c2tcp_enable\r\n\r\n\t\r\nYou should see:\r\n\t\r\n\tnet.ipv4.tcp_c2tcp_enable = 0\r\n\t\r\nWe will later enable C2TCP during our evaluation\r\n\r\nIn the current implementation, C2TCP's Tuner has been implemented in user-space. So, lets build C2TCP's Server-client app which includes The Tuner.  \r\n\r\n### Build C2TCP's Server-Client App\r\nSimply run the following:\r\n\r\n    cd ~/c2tcp/\r\n    ./build.sh\r\n\r\n### Install our Cellular Traces gathered in NYC\r\nYou need to get the traces from following link and copy them in Mahimahi's folder\r\n\r\n    git clone https://github.com/Soheil-ab/Cellular-Traces-2018.git    \r\n    sudo cp Cell*/* /usr/local/share/maimahi/traces/\r\n\r\n### Running The Evaluation\r\n\r\nFor the simplicity, first we disable password-timeout of sudo command:\r\n\r\n\tsudo visudo\r\n\r\nNow add following line and save it:\r\n\r\n\tDefaults    timestamp_timeout=-1\t\r\n\t\r\nWe have put required commands to run evaluation and generate the results for differnet schemes in one script.\r\nHere, we run C2TCP (with Application Target of 50ms), Cubic, BBR, TCP Westwood using the ATT-LTE-2016 trace file with following command:\r\n(For more information on how to use the script, please check comments in \"run.sh\" and \"evaluate.sh\" scripts)\r\n\r\n\tcd ~/c2tcp/\r\n\t./evaluate.sh 1 1 1 0 0 0 1 5000 7\r\n\r\nIf everything goes fine, you should see the results.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}